(name 'Cog-eem.99' message 'SpurBootstrap:Reset the saved transfored image''s stats' id '793a00a6-5411-447d-a231-afc41b4096d2' date '22 September 2013' time '9:38:48.819 pm' author 'eem' ancestors ((name 'Cog-eem.98' message 'fix a couple of comments' id '8027e935-f7b0-417a-be44-954c5765582d' date '21 September 2013' time '7:41:44.069 am' author 'eem' ancestors ((name 'Cog-eem.97' message 'SpurBootstrap:Add ^self versions for all Character copy methods.Add correct Behavior>>instSpec method' id 'afadf03b-6e6a-4c2c-9bf1-b398b50369e5' date '21 September 2013' time '7:37:46.803 am' author 'eem' ancestors ((name 'Cog-eem.96' message 'Make sure the format inst var of /all/ behaviors is converted to thenew representation.Fix BehaviorPROTOTYPEbasicNew[:] to use handleFailingBasicNew[:]instead of failingBasicNew[:].' id 'bd2cd65c-986e-413e-beb1-c0e9d480f5bb' date '20 September 2013' time '6:27:12.089 pm' author 'eem' ancestors ((name 'Cog-eem.95' message 'SpurBootstrap:Implement freeForwarders & a stub compactImage.  Turns out not tobe needed because the scavenger is effecive enough that noforwarders get tenured during rehash.Comment the halt in replacementForCharacterMethod: (thanks Frank!).Allocate a bigger heap.  Run the leak checker on launch (probablydoubling up, but what the hell).' id 'b1121b44-9ae1-4477-b7b2-1b09935e73c5' date '20 September 2013' time '2:38:26.947 pm' author 'eem' ancestors ((name 'Cog-eem.94' message 'SpurBootstrap: Remember to flush external primitives.' id '2eb57a41-e430-4174-a21c-2ec84cc5fdc6' date '20 September 2013' time '10:17:43.755 am' author 'eem' ancestors ((name 'Cog-eem.93' message 'SpurBootstrap:Change save & launch to save & set imageHeaderFlags & imageName.Quick hack to avoid having to write image save/load logic now.Needs VMMaker.oscog-eem.394' id 'd40f263c-8701-47f1-9fd8-1f95802ab49a' date '19 September 2013' time '4:44:22.202 pm' author 'eem' ancestors ((name 'Cog-eem.92' message 'SpurBootstrap:Rename symbolMap to literalMap and abstract away from directaccess to Smalltalk object''s internals, instead simulating bindingOf:,hence allowing bootstrap of Squeak trunk image that uses Environments.' id '03144fa4-dcb6-46ce-9d5b-05ed9cdbd3b8' date '19 September 2013' time '1:22:23.662 pm' author 'eem' ancestors ((name 'Cog-eem.91' message 'Add a prototype for Character>>hash.  Add checks for otherquick methods.Get scavengeImage to completely flush newSpace at the end of thebootstrap.  Follow forwarders before flushing new space.Bootstrasp now completes.' id 'b0e94ed6-219d-4e9a-8e04-ab08c6805eeb' date '18 September 2013' time '6:21:37.61 pm' author 'eem' ancestors ((name 'Cog-eem.90' message 'Make class table pages strong.Avoid sending size to Symbol.' id 'e329ae21-983a-4410-87ad-9559f7fc3cda' date '18 September 2013' time '2:01:05.377 pm' author 'eem' ancestors ((name 'Cog-eem.89' message 'Bring modifyCharacterMethods into withExecutableInterpreter:scope.Fix replacementForCharacterMethod: (was installing oop ofasInteger selector as a SmallInteger, not the oop itself).Make sure interpreter:object:perform:withArguments: incrementsbyteCount even if performed send is primitive.Needs VMMaker.oscog-eem.388.' id 'd56a6961-bf18-450f-9aaa-427cfb9e753d' date '17 September 2013' time '6:11:13.622 pm' author 'eem' ancestors ((name 'Cog-eem.88' message 'Leak check GCs in the bootstrap.' id 'cd562775-90b2-4b8f-9cc1-713e5691fbe5' date '16 September 2013' time '11:15:16.944 pm' author 'eem' ancestors ((name 'Cog-eem.87' message 'Scavenge the image post bootstrap (not that it gets that far yet...)' id 'a605b782-2c58-423e-a78a-9642beea261d' date '16 September 2013' time '9:07:03.261 am' author 'eem' ancestors ((name 'Cog-eem.86' message 'Change the Spur bootstrap to not rehash 0-sized objects.  Thiskeeps large collections unchanged (e.g. the handle registry).Count rehashes for debugging.' id '9eadd281-17e1-4bca-a739-e20458516353' date '14 September 2013' time '9:17:48.605 am' author 'eem' ancestors ((name 'Cog-eem.85' message 'Fix validation for the new value of tyhe forwarded object class index.Make sure nil is hashed (for the class table scan).Comment typo.Bootstrap now proceeds through many rehashes, crashing at bytecode 3976273.Needs VMMaker.oscog-eem.378.' id '0eff864f-7f98-4184-8cdb-75b5a35a46cb' date '13 September 2013' time '6:01:48.2 pm' author 'eem' ancestors ((name 'Cog-eem.84' message 'Spur: Rehash hash tables in the new image.  Breaks the bootstrapbecause SpurMemoryManager doesn''t yet implement become:.Refactor interpreterObject:perform:withArguments: andwithExecutableInterpreterDo: to take the interpreter as anargument so newHeap can be operated upon.Assign newHeap''s classTableIndex.Assumes VMMaker.oscog-eem.370 or later.' id 'e3e8417e-67c7-40da-bec6-f6d9cf6e6bbb' date '11 September 2013' time '7:47:56.564 am' author 'eem' ancestors ((name 'Cog-eem.83' message 'Add a sane scavenging-aware setGCParameters to the bootstrap.Hence add support for float literals in installable methods.Print ...done, when done transforming.' id 'fa54c636-dc1b-4884-b8e7-73745b128318' date '10 September 2013' time '5:46:13.794 pm' author 'eem' ancestors ((name 'Cog-eem.82' message 'bytesPerWord => wordSize' id '37d0e6ac-9997-415c-9971-8a8628a60cc8' date '10 September 2013' time '3:38:22.985 pm' author 'eem' ancestors ((name 'Cog-eem.81' message 'Eliminate compactClassesArray from bootstrapped Spur image.' id 'd7f23208-c524-4324-80fc-94825f5e847d' date '10 September 2013' time '10:09:40.374 am' author 'eem' ancestors ((name 'Cog-eem.80' message 'Fix bug in newClassFormatFor: that failed to transform class Bitmap.Add a class variable in which to save the transformed image,and a way to launch it.  No waiting for the bootstrap any longer.' id '7c00004c-7cef-46e2-ac92-e850b2714632' date '9 September 2013' time '4:57:42.949 pm' author 'eem' ancestors ((name 'Cog-eem.79' message 'Complete the bootstrap, replacing Character methods that accessthe value inst var with ones that send self asInteger.Assumes VMMaker.oscog-eem.355 or later.' id '82a87cb1-f968-4b79-a578-e7a88a010ec3' date '9 September 2013' time '10:43:13.075 am' author 'eem' ancestors ((name 'Cog-eem.78' message 'Finish installation of replacement methods.Modifying Character methods that access value is next (and last!).' id 'c76f476f-a48b-479a-aed5-10ba74bf8cf0' date '7 September 2013' time '5:05:10.843 pm' author 'eem' ancestors ((name 'Cog-eem.77' message 'Finish installation of prototype methods; modifying Charactermethods yet to be done.' id 'bec1ed80-2794-4350-b2d6-91d25c87c0c4' date '7 September 2013' time '2:04:35.375 pm' author 'eem' ancestors ((name 'Cog-eem.76' message 'Update SpurBootstrap class comment.Document idea of having prototype methods for differentSqueak/Pharo versions.' id 'b037d52a-2e90-453d-9e0a-73358bdbd71c' date '7 September 2013' time '1:25:36.672 pm' author 'eem' ancestors ((name 'Cog-eem.75' message 'Refactor enumeration of prototype metods to add isMeta info.FIrst cut of installableMethodFor:selector:className:isMeta:.' id 'f6d7520c-4738-4d03-b5b0-5126b4650eb7' date '7 September 2013' time '1:18:24.463 pm' author 'eem' ancestors ((name 'Cog-eem.74' message 'Refactor the simulated execution of oldInterpreter/oldHeap.Add addNewMethods to install the missing prototype methods.' id '0cc1769d-327b-40b3-80d3-32335718ae96' date '6 September 2013' time '3:40:17.104 pm' author 'eem' ancestors ((name 'Cog-eem.73' message 'Reorganize, splitting bootstrap into bootstrap image & bootstrapmethods.Add prototypes for instance creation that allow the scavenger to run.Write first-phase of installing modified methods; intern any and allsymbols in the prototype methods.' id 'f0f69347-38f2-489a-b027-ade5091ddc1d' date '6 September 2013' time '2:14:04.626 pm' author 'eem' ancestors ((name 'Cog-eem.72' message 'Map class format (instSpec) from old to new encoding.Add to the class side of SpurBootstrap prototypes for imagemethods that must change to function with the new image format.Next step is for the bootstrap to install these methods appropriately.' id '54b8e936-886e-42ec-8e5e-3442901c6107' date '5 September 2013' time '5:16:44.576 pm' author 'eem' ancestors ((name 'Cog-eem.71' message 'Add asserts to the Spur bootstrap that ed me to realize the image Iam using has an invalid specialObjectsArray.  GIGO ;-).Change the Spur bootstrap launch to use linear search on methodlookup (because nothing''s been rehashed yet).The bootstrap now gets to the first instantiation.Needs VMMaker.oscog-eem.349.' id '4bd9ed8f-2b14-41c1-b6c3-4bb86633e92c' date '5 September 2013' time '2:13:26.665 pm' author 'eem' ancestors ((name 'Cog-eem.70' message 'Rename fetchClassOfNonInt: to fetchClassOfNonImm:.' id '1cf5db5c-444b-434d-bd7e-3deae50eee2a' date '4 September 2013' time '5:28:45.984 pm' author 'eem' ancestors ((name 'Cog-eem.69' message 'Update bootstrap to facilitate setting up new space and thescavenger after image conversion.' id 'd6786922-3487-4e64-bb5c-95a935cbd3c3' date '4 September 2013' time '2:22:08.497 pm' author 'eem' ancestors ((name 'Cog-eem.68' message 'Fix class indices for LargePosi/NegativeInteger.Fix shift in fillInPointerObject:from:.' id 'dbc8c75b-6e15-48ce-b17d-e37d1b1a8a96' date '3 September 2013' time '3:07:33.011 pm' author 'eem' ancestors ((name 'Cog-eem.67' message 'Simplify Spur bootstrap launch given VMMaker.oscog-eem.344.Fix MultiProcessor after the refactoring of the processor Aliensgiven the addition of the ARM processor alien.' id '3b61b127-9705-4da9-8caf-81f65a35418b' date '3 September 2013' time '1:53:20.082 pm' author 'eem' ancestors ((name 'Cog-eem.66' message 'Rename CogMemoryManager et al to SpurMemoryManager et al.Add class initialization of SpurMemoryManager.Move assignment of classTableRootObj: so SMM can cache classTableFirstPage.Add comment to defineKnownClassIndices to ref mirror init inSMM class.' id '66744cc4-36ff-4638-847f-f7fdfc4c08ef' date '2 September 2013' time '6:23:37.336 pm' author 'eem' ancestors ((name 'Cog-eem.65' message 'Change slotsSize to numSlots.' id 'd29a1aeb-dc42-4821-9ce7-9a100450da2a' date '2 September 2013' time '4:16:24.009 pm' author 'eem' ancestors ((name 'Cog-eem.64' message 'Add a launch to launch the StackImnterpreter post bootstrap.Needs VMMaker.oscog-eem.341.' id '05a74b07-3da5-409c-845a-11f24a2ea00e' date '2 September 2013' time '1:26:51.013 pm' author 'eem' ancestors ((name 'Cog-eem.63' message 'Check that all objects can be enumerated after the bootstrap.Check that the right number of objects are created.Lots of asserts added to allocateClassTable to check header accessand objectAfter:.  Needs VMMaker.oscog-eem.340.' id '3bfeebef-ce05-4800-9514-708d11b3078f' date '1 September 2013' time '8:46:37.722 pm' author 'eem' ancestors ((name 'Cog-eem.62' message 'Fist cut of the new VM bootstrap (Spur :-) ).Needs VMMaker.oscog-eem.339.SpurBootstrap reads in an image in the simulator''s NewObjectMemoryand writes transformed objects to a CogMemoryManager,mapping old 4-bit format to new 5-bit format, building the classTable,and mapping Character objects to immediate characters.' id '193a9728-afb3-4abc-9018-ccd7fb74dbcb' date '31 August 2013' time '12:20:27.103 pm' author 'eem' ancestors ((name 'Cog-eem.61' message 'Add versions of run and single-step to the processor plugins thattake a maximum address parameter to allow trapping writes beyondfreeStart (not used yet in VMMaker).' id '3dba03de-7a41-4da2-bdf4-d8276f5665da' date '19 July 2013' time '11:40:38.157 am' author 'eem' ancestors ((name 'Cog-lw.60' message 'Implemented Simulation frame building as hinted in Eliots Email ''Changing CogSimulator abi''' id '826fc17b-8f27-5b40-8103-3e2a690b49cb' date '2 February 2013' time '12:07:28.211 am' author 'lw' ancestors ((name 'Cog-eem.59' message 'Add support for labelling Newspeak implicit receiver caches.' id '177b66c7-07e1-44e1-add1-e83d909f3e8f' date '30 January 2013' time '10:17:08.461 am' author 'eem' ancestors ((name 'Cog-lw.58' message 'changed the disassemble string generated by the plugin (added address) and subsequently had to change back decoration and some testsadded some abi information, e.g. cResultReg' id 'c6b730fe-47ba-da41-ab07-5de7090d4064' date '30 January 2013' time '9:34:28.956 am' author 'lw' ancestors ((name 'Cog-lw.56' message 'found and implemented some more methods needed for simulation' id '9b8c60e7-e166-fe49-824f-919f0d3bb729' date '17 November 2012' time '10:14:16.98 pm' author 'lw' ancestors ((name 'Cog-lw.55' message '- added class comments to both new ProcessorAlien classes and ProcessorSimulationTrap- pushed up decorateDisassembly:for:, for use in both, IA32Alien and ARMAlien. Also added the address as an additional parameter, to enable the ARM decoration to prepend it.- added postCallArgumentsNumArgs:in: with an extensive comment.' id '2c9c00af-723a-ee46-9371-6386cc81ff35' date '24 August 2012' time '8:10:39.178 pm' author 'lw' ancestors ((name 'Cog-lw.54' message 'changes because of different disassembly returns and error formats' id 'aeefac03-a0a4-1343-a97d-74136d85e047' date '18 August 2012' time '2:29:17.38 pm' author 'lw' ancestors ((name 'Cog-lw.53' message 'pushed up the disassemble methods from BochsIA32ProcessorAlien to CogProcessorAlien. For that to work, I also changed the specifict register names to their abstract counterpart.Started implementing the ProcessorTrapSignal way of telling the simulator what kind of error occured in the emulator. There might be a huge problem down the road, because the ARM simulator traps branches and jumps, only after the pc has been changed. For calls, this is no problem, because we have the lr. But what about long jumps?Removed the opcode-methods, which were only used in filling the OpcodeTable for ProcessorTraps. This way of identifying the last instruction was not applicable, because some of those opcodes are implemented in several ways, some of which require more than one ARM instruction. For now, see #instructionTypeAt:in:.' id 'f12f20e9-6b2f-764a-95cd-6dcae41f853a' date '9 August 2012' time '9:15:44.451 pm' author 'lw' ancestors ((name 'Cog-lw.52' message 'refactored smashRegisterAccessors to allow plugging in different register names to be smashed.added proper #printOn: to ARMAlien' id '034b9ff8-a7b0-6449-b4cb-b173a85473e0' date '8 August 2012' time '2:38:07.331 pm' author 'lw' ancestors ((name 'Cog-lw.51' message 'added FlushICache primitive callfixed a typo in registerState, which read r0 instead of r9' id '92936c84-032d-654c-91bd-797b6257493c' date '31 July 2012' time '3:37:54.171 pm' author 'lw' ancestors ((name 'Cog-lw.50' message '- Removed the testMOVSD which was is not adaptable for ARM since there is no MOVSD-opcode.- Added some methods which are used by the simulator, namely setStackAlignmentDelta:, setFramePointer:stackPointer:, and endianness.- Switched Transcript logging of the Nfib1 test off.' id '00c1fd03-0c9a-fe46-8b5f-1d879ca17cd4' date '17 July 2012' time '10:15:56.611 pm' author 'lw' ancestors ((name 'Cog-eem.49' message 'Remove duplicate methods now moved to superclass and fix a timestamp.' id '97c68673-8068-4b5b-9978-1c68751ffb13' date '11 July 2012' time '1:03:06.847 pm' author 'eem' ancestors ((name 'Cog-lw.48' message 'Added the GdbARMAlien, together with its tests and the plugin.Additionally, introduced CogProcessorAlien as a common superclass for BochsIA32Alien and GdbARMAlien to increase code reusage.The same might be possible for the Plugins (BochsIA32/GdbARM), because they are also identical.' id '5ae3e465-4b2c-2349-9b88-77b8f53d5acd' date '11 July 2012' time '9:13:45.865 pm' author 'lw' ancestors ((name 'Cog-eem.47' message 'Moved TempScopeEditor to its own package(http://source.squeak.org/trunk/TemporaryVariableScopeEditor)' id '00cfe515-a00e-43b8-97b4-a117046d5ed0' date '5 April 2012' time '10:00:28.116 am' author 'eem' ancestors ((name 'Cog-eem.46' message 'Reduce BochsIA32Alien dataSize now it can be build on WIndows aswell as Mac.' id 'a248b334-3c7b-4bc7-b4a7-2b07f383485c' date '15 November 2011' time '2:30:13.079 pm' author 'eem' ancestors ((name 'Cog-eem.45' message 'Cog needs to live somewhere, and VMMaker is where that somewhereshould be.  Update error handling for SISTA support.' id '5b38d4e4-2a1f-477e-b79a-a82e37e0403a' date '24 July 2011' time '12:37:45.539 pm' author 'eem' ancestors ((name 'Cog-eem.44' message 'Support for multi-processors instead of the dreadful old hack.Provide a read/execute write-protect code zone. Refactor disassembly decoration.Use unsignedLongAt: to get retpcs etc.Don''t print the fp regs if they''re empty.Support for smashing caller-saved registers.ShootoutTests take stdio from StandardFileStream not OSProcess.' id 'f3c6694c-7678-4fd9-98f3-8f406565043e' date '8 January 2011' time '2:32:43.949 pm' author 'eem' ancestors ((name 'Cog-eem.43' message 'Fix CrashReportsMailer>>candidateMessagesDo: to not assumeprompt message delivery (i.e. scan all messages > start, not betweenstart & end dates).' id 'f9c40b8b-46d5-4f69-a383-48002b577320' date '14 August 2010' time '7:19:07.45 pm' author 'eem' ancestors ((name 'Cog-eem.42' message 'CrashReportsMailer tweaks' id '683272ad-cdd6-4584-9b5d-25f45cc135c6' date '9 August 2010' time '11:40:20.14 am' author 'eem' ancestors ((name 'Cog-eem.41' message 'CrashReportsMailer.Refactor ShootoutTests comparison allows vs other times.Scripts for creating separate VM.' id '464bf6a5-1ff7-473c-bdb6-dbfa5602a41d' date '29 June 2010' time '4:44:22 pm' author 'eem' ancestors ((name 'Cog-eem.40' message 'ProcessorSimulationTrap: opcode is no longer an inst var, it shouldn''t be printed' id '1348aa2c-fc34-4398-84be-5f3aac98257d' date '23 May 2010' time '4:01:08 pm' author 'eem' ancestors ((name 'Cog-eem.39' message 'BochsIA32Alien	Add support for byte reads & writes (for prim trace log index access).	Refactor exception handling to use perform and a dispatch	table indexed by opcode.	Eliminate opcode form ProcessorSimulationTrap.' id 'a9e5f682-16e1-4417-83d4-f4a3ee554dac' date '7 May 2010' time '1:08:01 pm' author 'eem' ancestors ((name 'Cog-eem.38' message 'nuke debugging code' id '9b2021e5-1301-4e3a-b2b6-e624778ae268' date '1 October 2009' time '5:03:42 pm' author 'eem' ancestors ((name 'Cog-eem.37' message 'Add saveEsp & saveEip accessors to BochsIA32Alien.  Invaluablefor debugging processor exceptions.' id '686dd6a2-5a7d-4943-bad6-0eda97280374' date '30 September 2009' time '3:22:54 pm' author 'eem' ancestors ((name 'Cog-eem.36' message 'BochsIA32Alien	save & restore register state to support MT VM simulator.	faster simulation.	integer-only register state printing.	reorganize.CogVMTests	tests for the multiplicative operators * / // \\ div: & quo:' id '412c4ec5-20e6-47d3-a077-6640c5ff196c' date '24 September 2009' time '2:47:49 pm' author 'eem' ancestors ((name 'Cog-eem.35' message 'Add CommandLineLauncher.BochsIA32Alien>>stopReason' id 'c92afc69-ab15-4315-87f6-b945a1c45a5b' date '2 September 2009' time '1:16:08 pm' author 'eem' ancestors ((name 'Cog-eem.34' message 'Changed BochsIA32Alien''s class comment.' id 'db71fcbb-4f4f-4d78-aa25-857f309cd0dc' date '24 July 2009' time '9:24:09 pm' author 'eem' ancestors ((name 'Cog-eem.33' message 'Add VM test for activation suspension point (stackCheckOffset/first bytecode)' id '68e13dff-2b39-4dc2-aac5-146eeca89f61' date '17 June 2009' time '11:36:42 pm' author 'eem' ancestors ((name 'Cog-eem.32' message 'Added context xray methods and changed pc mapping tests to assert that machine code is being run.' id 'c02bf67d-6bbf-4657-b2df-df3a8976b2d7' date '17 June 2009' time '9:29:23 am' author 'eem' ancestors ((name 'Cog-eem.31' message 'Added CogVMTests with a test for pc mapping' id '58cadf4b-694f-4541-b41f-073fc949f755' date '16 June 2009' time '2:06:07 pm' author 'eem' ancestors ((name 'Cog-eem.30' message 'refactored threadring benchmark to avoid flakey OSProcess stdout' id '7e513e09-05eb-4adf-8db2-da53bf2a674d' date '9 June 2009' time '12:50:30 pm' author 'eem' ancestors ((name 'Cog-eem.29' message 'BochsIA32Alien support for simulating jump-call machinery of"sideways calls" in prim calls in Cog (for callback support)' id '472c34ce-e131-4fca-9b10-90521abf6f59' date '7 May 2009' time '4:54:17 pm' author 'eem' ancestors ((name 'Cog-eem.28' message 'Add floating-point and control-register support to BochsIA32Alien.' id '528faa41-b542-4f3f-b3c7-b850378b7f5e' date '28 April 2009' time '2:11:21 pm' author 'eem' ancestors ((name 'Cog-eem.27' message 'BochsIA32Alien now builds/tears down a frame when simulatingcall/return for more faithful assertion checking.' id '8f84e8d1-9164-4a5c-ba89-41f5aea56c8d' date '3 April 2009' time '2:39:27 pm' author 'eem' ancestors ((name 'Cog-eem.26' message 'Make BochsIA32Plugin use topRemappableOop instead of using push/pop.' id '461fc2ca-f8b1-4d10-a707-48de3a78b89e' date '10 March 2009' time '2:03:11 pm' author 'eem' ancestors ((name 'Cog-eem.25' message 'better disassembly and flag printing.support for stack offset checking.' id 'bbb3b674-05e3-45a8-9cb7-9d77614d0738' date '16 February 2009' time '12:42:34 pm' author 'eem' ancestors ((name 'Cog-eem.24' message 'Support for read-only and unmapped low memory in the BochsIA32Plugin for better catching of out-of-bounds accesses.' id 'd8c029f7-b93a-4885-a714-e8ee1883e178' date '28 January 2009' time '5:41:53 pm' author 'eem' ancestors ((name 'Cog-eem.23' message 'More tests, more Cog support, more stuff.' id 'cb591042-9c60-45d1-9338-b40e6b6dbee0' date '21 January 2009' time '9:30:30 pm' author 'eem' ancestors ((name 'Cog-eem.22' message 'Bochs plugin now nice and runny; not just a single step child' id 'd6bc1891-ea3d-4846-82ea-1ee7ba8e09cb' date '14 January 2009' time '4:52:15 pm' author 'eem' ancestors ((name 'Cog-eem.21' message 'BochsIA32Alien & ProcessorSimulationTrap.  The x86/IA32 simulation machinery for the Cog JIT' id 'c8d427f6-1e1c-4e92-a876-e8dc30c9abea' date '7 January 2009' time '8:51:27 am' author 'eem' ancestors ((name 'Cog-eem.20' message 'Added a ProcessorSimulationTrap exception for orderly switching between processor simulation and Smalltalk run-time.' id '2a6b4f26-1ec1-403e-bbd1-23466dbd96a4' date '18 December 2008' time '4:17:23 pm' author 'eem' ancestors ((name 'Cog-eem.19' message 'Moving all C annotation messages (var:type: export: et al) to pragmas.  Plugins up-to-date with repository as of 9:20am today.' id '48508b38-5e35-4659-8b09-f10627878db7' date '17 December 2008' time '9:43:42 am' author 'eem' ancestors ((name 'Cog-eem.18' message 'Bochs IA32 Alien interface and plugin.Tests that run CPUID and compute nfib (and pass).Fix to cr vs lf output in the ShootoutThread test' id 'd461fcb1-f2c2-41b7-ab00-df8f247fea04' date '12 December 2008' time '4:47:51 pm' author 'eem' ancestors ((name 'Cog-eem.17' message 'Initial cut of BochsIA32Alien interface to Bochs C++ x86 emulator.Fix to block temp relocating machinery for empty sequences of temps' id '2f743ff5-876d-4177-8b8b-0a8b5ef053fc' date '5 December 2008' time '10:04:16 am' author 'eem' ancestors ((name 'Cog-eem.16' message 'backing up my claims...' id '09c9c172-b8e8-4939-b2fa-a794006575d7' date '17 November 2008' time '12:38:31 pm' author 'eem' ancestors ((name 'Cog-eem.15' message 'Made ShootoutTests arg doit-friendly...' id 'a964e22e-22d2-483b-904c-d2080fa59b8e' date '17 November 2008' time '12:36:10 pm' author 'eem' ancestors ((name 'Cog-eem.14' message 'Shootout tests with reference times collected for QF-1.2.23.Do a gc before each separate benchmark.' id 'dbda17c8-d6de-4d51-aaa5-ba30df3dd4dd' date '30 October 2008' time '11:08:34 am' author 'eem' ancestors ((name 'Cog-eem.13' message 'Use roundTo: why donchya??' id 'efe58e2f-ad6a-4a17-8aec-244509ae4c90' date '24 October 2008' time '4:57:06 pm' author 'eem' ancestors ((name 'Cog-eem.12' message 'Added stream extensions to DummyStream.Abstracted % change report' id '48a81d5f-51c2-40f1-92b6-5766b8d5ecbc' date '23 October 2008' time '12:46:31 pm' author 'eem' ancestors ((name 'Cog-eem.11' message 'Added Stream extensions to Cog-Benchmarks' id 'd3e889d3-db65-4a47-bfcb-5051b5180a4d' date '14 October 2008' time '10:52:07 am' author 'eem' ancestors ((name 'Cog-eem.10' message 'TempScopeEditor automatically identifies remote temps that should be moved into inner block scopes and makes the changes.Added some ComputerLanguageShootout benchmarks.' id 'f18ec9ca-eef4-4aee-9291-ee7e25c8eedc' date '30 September 2008' time '11:24:05 am' author 'eem' ancestors ((name 'Cog-eem.9' message 'comment typoe' id 'bf677f8c-0926-44a5-b901-82a795759ab9' date '21 July 2008' time '5:08:12 pm' author 'eem' ancestors ((name 'Cog-eem.8' message 'Made Encoder''s error reporting code with a nil selector to ease 3.8 vintage bootstrap' id '581da544-9d89-44ee-b45d-3256cdad3644' date '19 June 2008' time '1:03:11 pm' author 'eem' ancestors ((name 'Cog-eem.7' message 'Last update to bootstrap after small fix to decompiler' id '7b797480-6281-4a24-9103-c8cbfcf0ab3e' date '16 June 2008' time '6:36:37 pm' author 'eem' ancestors ((name 'Cog-eem.6' message 'Bootstrap now contains code to throw the switch to compile to closures, instead of looking for a file called ClosureSwitch-Parser-encoder.st. (blush)' id '2f2675bc-e70c-4a80-ada4-a59c074a131f' date '16 June 2008' time '5:30:44 pm' author 'eem' ancestors ((name 'Cog-eem.5' message 'Updated boot to include changes in Kernel-eem.82 (fixes for runSimulated:contextAtEachStep:)' id '22b2bcde-444d-4087-82eb-b35ee43b2e0d' date '16 June 2008' time '3:55:40 pm' author 'eem' ancestors ((name 'Cog-eem.4' message 'Snafu.  Last Compiler check-in installed the Closure compiler switch thrown.  This is a no no.' id '1acb98aa-8ec6-47c0-86e6-d771113fe969' date '16 June 2008' time '10:36:52 am' author 'eem' ancestors ((name 'Cog-eem.3' message 'Updated bootstrap after elimination of pointless short-form pushIndirectTemp bytecode 139' id '344ff7c8-7317-447d-afe2-939e1eaffbf0' date '16 June 2008' time '10:00 am' author 'eem' ancestors ((name 'Cog-eem.2' message 'Version 2 of Closure bootstrap.  Bug fixes in ContextPart hierarchy and debugger.' id '05f4e079-0bb5-4169-82c6-90581f888b9b' date '15 June 2008' time '4:40:54 pm' author 'eem' ancestors ((name 'Cog-eem.1' message 'A place-hlder for various things Cog-related.Right now this includes the script to boot a contemporary Forums dev image to Closures.See CogScripts class>>bootstrapClosures.' id '5de28ed1-e4cb-43f7-bf43-93cf3f88caa3' date '13 June 2008' time '3:00:57 pm' author 'eem' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Cog-IgorStasenko.57' message '- never ever call ''super initialize'' in class initialize method' id 'c30349d1-62fc-4519-9d7c-938ff9c173d0' date '19 December 2012' time '11:57:22 am' author 'IgorStasenko' ancestors ((name 'Cog-eem.56' message 'Update Eliot''s Type Checker to use willPushNil.  Premature, butI''ll forget otherwise and this code is essentially dormant.' id '8beb4f67-65f8-48a3-89f8-dcfb5311613c' date '26 November 2012' time '3:44:48.674 pm' author 'eem' ancestors ((id '2c9c00af-723a-ee46-9371-6386cc81ff35')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())